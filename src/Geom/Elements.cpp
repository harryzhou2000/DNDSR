#include "Elements.hpp"

namespace DNDS::Geom::Elem
{
    

    Eigen::Matrix<t_real, 3, Eigen::Dynamic> GetStandardCoord(ElemType t)
    {
        auto ret = Eigen::Matrix<t_real, 3, Eigen::Dynamic>{};
        auto elem = Element{t};

        ret.resize(3, elem.GetNumNodes());

        if (t == Line2)
        {
            ret << -1, 1, 0, 0, 0, 0;
        }
        if (t == Line3)
        {
            ret << -1, 1, 0, 0, 0, 0, 0, 0, 0;
        }
        if (t == Tri3)
        {
            ret << 0, 1, 0, 0, 0, 1, 0, 0, 0;
        }
        if (t == Tri6)
        {
            ret << 0, 1, 0, 0.5, 0.5, 0, 0, 0, 1, 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0;
        }
        if (t == Quad4)
        {
            ret << -1, 1, 1, -1, -1, -1, 1, 1, 0, 0, 0, 0;
        }
        if (t == Quad9)
        {
            ret << -1, 1, 1, -1, 0, 1, 0, -1, 0, -1, -1, 1, 1, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
        }
        if (t == Tet4)
        {
            ret << 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1;
        }
        if (t == Tet10)
        {
            ret << 0, 1, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0, 0, 0, 1, 0, 0, 0, 0.5, 0.5, 0.5;
        }
        if (t == Hex8)
        {
            ret << -1, 1, 1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1;
        }
        if (t == Hex27)
        {
            ret << -1, 1, 1, -1, -1, 1, 1, -1, 0, 1, 0, -1, -1, 1, 1, -1, 0, 1, 0, -1, 0, 0, 1, 0, -1, 0, 0, -1, -1, 1, 1, -1, -1, 1, 1, -1, 0, 1, 0, -1, -1, 1, 1, -1, 0, 1, 0, 0, -1, 0, 1, 0, 0, 0, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 1, -1, 0, 0, 0, 0, 1, 0;
        }
        if (t == Prism6)
        {
            ret << 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, -1, -1, -1, 1, 1, 1;
        }
        if (t == Prism18)
        {
            ret << 0, 1, 0, 0, 1, 0, 0.5, 0.5, 0, 0, 1, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0, 0, 1, 0, 0, 1, 0, 0.5, 0.5, 0, 0, 1, 0, 0.5, 0.5, 0, 0.5, 0.5, -1, -1, -1, 1, 1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 1, 0, 0, 0;
        }
        if (t == Pyramid5)
        {
            ret << -1, 1, 1, -1, 0, -1, -1, 1, 1, 0, 0, 0, 0, 0, 1;
        }
        if (t == Pyramid14)
        {
            ret << -1, 1, 1, -1, 0, 0, 1, 0, -1, -0.5, 0.5, 0.5, -0.5, 0, -1, -1, 1, 1, 0, -1, 0, 1, 0, -0.5, -0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.5, 0.5, 0.5, 0.5, 0;
        }

        return ret;
    }
}